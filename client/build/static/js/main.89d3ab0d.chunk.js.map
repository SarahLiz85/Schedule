{"version":3,"sources":["components/display.jsx","components/newform.jsx","components/editform.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","activities","setActivities","fetchActivities","axios","get","then","res","console","log","data","catch","err","useEffect","map","act","i","className","key","activity","description","moment","start","format","duration","units","to","_id","onClick","e","delete","ScheduleForm","setActivity","setDescription","setStart","setDuration","setUnits","errors","setErrors","onSubmit","preventDefault","scheduleItem","post","navigate","type","onChange","target","value","properties","message","ScheduleEdit","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.89d3ab0d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\nimport moment from 'moment';;\r\n\r\nconst Display = props => {\r\n\r\n    const [activities, setActivities] = useState([]);\r\n    // const [pastActivities, setPastActivities] = useState([]);\r\n\r\n    const fetchActivities = () => {\r\n        axios.get(\"http://localhost:8000/api/schedule\")\r\n            .then(res => {\r\n                console.log(res);\r\n                setActivities(res.data);\r\n                //this will filter out past activities\r\n                // setActivities(res.data(a => new Date(a.start) > new Date()));\r\n                // console.log(new Date(activity.start) > new Date());\r\n            }).catch(err => console.log(err));\r\n            \r\n    }\r\n\r\n    useEffect( () => {\r\n       fetchActivities();\r\n    }, []);\r\n\r\n    const remove = _id => {\r\n        console.log(_id);\r\n        axios.delete(`http://localhost:8000/api/schedule/${_id}`)\r\n        .then(res => {\r\n            console.log(res);\r\n            fetchActivities();\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {activities.map( (act, i) =>\r\n                <div className=\"card mt-3\" key={i}>\r\n                    <div className=\"card-header bg-primary text-light\">{act.activity}</div>\r\n                    <div className=\"card-body\">\r\n                        <p>Description: {act.description}</p>\r\n                        <p>Start: {moment(act.start).format('MMMM Do YYYY, h:mm a')}</p>\r\n                        <p>Duration: {act.duration} {act.units}</p>\r\n                        <Link className=\"btn btn-outline-primary\" to={`/edit/${act._id}`}>Edit</Link>\r\n                        <button onClick={e => remove(act._id)} className=\"btn btn-outline-danger float-right\">Remove</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default Display;","import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst ScheduleForm = props => {\r\n\r\n    const [activity, setActivity] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [start, setStart] = useState(\"\");\r\n    const [duration, setDuration] = useState(0);\r\n    const [units, setUnits] = useState(\"minutes\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const CreateSchedule = e => {\r\n        e.preventDefault();\r\n        const scheduleItem = {activity, description, start, duration, units};\r\n        axios.post('http://localhost:8000/api/schedule', scheduleItem)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                }else{\r\n                    navigate('/');\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreateSchedule}>\r\n                <div className=\"form-group\">\r\n                    <label>Activity</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setActivity(e.target.value)}/>\r\n                    {errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)}></textarea>\r\n                    {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Start</label>\r\n                    <input type=\"datetime-local\" className=\"form-control\" onChange={e => setStart(e.target.value)} />\r\n                    {errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <label>Duration</label>\r\n                        <input type=\"number\" className=\"form-control\" value={duration} onChange={e => setDuration(e.target.value)} />\r\n                        {errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <label>Units</label>\r\n                        <select className=\"form-control\" onChange={e => setUnits(e.target.value)}>\r\n                            <option>minutes</option>\r\n                            <option>hours</option>\r\n                            <option>days</option>\r\n                        </select>\r\n                        {errors.units ? <p className=\"text-danger\">{errors.units.properties.message}</p>: \"\" }\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-success btn-block mt-3\" value=\"Create New Event\"/>\r\n            </form>\r\n           \r\n        </div>\r\n    );\r\n}   \r\nexport default ScheduleForm;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst ScheduleEdit = props => {\r\n\r\n    const [activity, setActivity] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [start, setStart] = useState(\"\");\r\n    const [duration, setDuration] = useState(0);\r\n    const [units, setUnits] = useState(\"minutes\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect( () => {\r\n        console.log(props._id);\r\n        axios.get(`http://localhost:8000/api/schedule/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setActivity(res.data.activity);\r\n                setDescription(res.data.description);\r\n                setStart(moment(res.data.start).format('YYYY-MM-DDTHH:mm'));\r\n                setDuration(res.data.duration);\r\n                setUnits(res.data.units);\r\n            }).catch(err => console.log(err));\r\n    }, [props._id]);\r\n\r\n    const UpdateSchedule = e => {\r\n        e.preventDefault();\r\n        const scheduleItem = {activity, description, start, duration, units};\r\n        axios.put(`http://localhost:8000/api/schedule/${props._id}`, scheduleItem)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                }else{\r\n                    navigate('/');\r\n                }\r\n            }).catch(err => console.log(err));\r\n    }\r\n\r\n    const remove = () => {\r\n        // console.log(_id);\r\n        axios.delete(`http://localhost:8000/api/schedule/${props._id}`)\r\n        .then(res => {\r\n            console.log(res);\r\n            navigate('/');\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdateSchedule}>\r\n                <div className=\"form-group\">\r\n                    <label>Activity</label>\r\n                    <input type=\"text\" className=\"form-control\" value={activity} onChange={e => setActivity(e.target.value)}/>\r\n                    {errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)}></textarea>\r\n                    {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Start</label>\r\n                    <input type=\"datetime-local\" value={start} className=\"form-control\" onChange={e => setStart(e.target.value)} />\r\n                    {errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p>: \"\" }\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <label>Duration</label>\r\n                        <input type=\"number\" className=\"form-control\" value={duration} onChange={e => setDuration(e.target.value)} />\r\n                        {errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p>: \"\" }\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <label>Units</label>\r\n                        <select className=\"form-control\" value={units} onChange={e => setUnits(e.target.value)}>\r\n                            <option>minutes</option>\r\n                            <option>hours</option>\r\n                            <option>days</option>\r\n                        </select>\r\n                        {errors.units ? <p className=\"text-danger\">{errors.units.properties.message}</p>: \"\" }\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-3\" value=\"Update\" />\r\n            </form>\r\n            <div className=\"col-sm-8 offset-sm-2 mt-3\">\r\n                <button className=\"btn btn-danger btn-block\" onClick={remove}>Remove</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}   \r\nexport default ScheduleEdit;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Router, Link } from '@reach/router';\nimport axios from 'axios';\nimport Display from './components/display';\nimport ScheduleForm from './components/newform';\nimport ScheduleEdit from './components/editform';\n\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <h1>Schedule</h1>\n      </div>\n      <Link className=\"btn btn-outline-info\" to=\"/\">Schedule</Link>\n      <Link className=\"btn btn-outline-info\" to=\"/new\">New Activity</Link>\n      <Router>\n      <Display path=\"/\" />\n      <ScheduleForm path=\"/new\" />\n      <ScheduleEdit path=\"/edit/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}